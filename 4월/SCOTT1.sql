SELECT COUNT(*)
FROM PROFESSOR;

SELECT SUM(SAL)
FROM PROFESSOR;

SELECT TRUNC(AVG(SAL),-1)
FROM PROFESSOR;

SELECT ROUND(AVG(SAL),0)
FROM PROFESSOR;

SELECT MAX(SAL)
FROM PROFESSOR;

SELECT MIN(SAL)
FROM PROFESSOR;

SELECT * FROM PROFESSOR;

SELECT NAME, SAL
FROM PROFESSOR
WHERE SAL = (SELECT MAX(SAL) FROM PROFESSOR);
------
---- emp 테이블 참고
-- 1. 10,20,30번 부서의 평균급여 구하기
SELECT ROUND(AVG(SAL))
FROM EMP
WHERE DEPTNO = 10 
UNION 
SELECT ROUND(AVG(SAL))
FROM EMP
WHERE DEPTNO = 20
UNION
SELECT ROUND(AVG(SAL))
FROM EMP
WHERE DEPTNO = 30;

-- 부서별 직원 평균 급여(부서번호, 평균출력) 부서별 오름차순
SELECT DEPTNO,  ROUND(AVG(SAL)) AS "부서별 평균급여"
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

-- EMP 테이블에서 부서번호 및 직책(JOB)별 평균급여, 부서번호 내림차순, 높은 급여 순으로 출력
SELECT DEPTNO, JOB, ROUND(AVG(SAL)) AS "부서번호 직책별 평균급여"
FROM EMP
GROUP BY (DEPTNO,JOB)
ORDER BY DEPTNO DESC, ROUND(AVG(SAL)) DESC;
 
 -- EMP 테이블에서 부서번호 및 직책(JOB)별 평균급여, 부서번호 내림차순, 직급 오름차순으로 출력
SELECT DEPTNO, JOB, ROUND(AVG(SAL)) AS "부서번호 직책별 평균급여"
FROM EMP
GROUP BY (DEPTNO,JOB)
ORDER BY DEPTNO DESC, JOB ASC;

-- 1. 학과 별 교수들의 평균급여
SELECT * FROM PROFESSOR;

SELECT DEPTNO ,ROUND(AVG(SAL))
FROM PROFESSOR
GROUP BY (DEPTNO);

-- 2. 학과 별 교수들의 합계급여

SELECT DEPTNO, SUM(SAL), COUNT(*) AS "그룹별 인원수"
FROM PROFESSOR
GROUP BY (DEPTNO);

-- 3. 학과 직급별 교수들의 평균 급여

SELECT DEPTNO, POSITION, ROUND(AVG(SAL)) AS "평균급여"
FROM PROFESSOR
GROUP BY (DEPTNO,POSITION)
ORDER BY DEPTNO;

-- 4. 교수중에서 급여(SAL) 보직수당(COMM)을 합친 금액이 가장 많은 경우와
-- 가장 적은 경우 그리고 평균 금액을 출력
-- COMM이 없는 교수의 급여는 0으로 계산

SELECT ROUND(MAX(NVL(SAL+COMM, 0)), 1) 최대값,
       ROUND(MIN(NVL(SAL+COMM, 0)), 1) 최소값
FROM PROFESSOR;

SELECT ROUND(MAX(SAL+NVL(COMM,0)), 1) 최대값,
       ROUND(MIN(SAL+NVL(COMM,0)), 1) 최소값
FROM PROFESSOR;

-- 5. 직급별 평균 급여가 300보다 크면 '우수' 작거나 같으면 '보통' 
-- 직급별(POSITION), 평균급여, 비고
SELECT POSITION, AVG(SAL),
CASE 
WHEN AVG(SAL) > 300 THEN '우수'
WHEN AVG(SAL) <= 300 THEN '보통'
END 비고
FROM PROFESSOR
GROUP BY POSITION;
----- EMP 테이블에서 입사일 연도별 인원수
-- TOTAL 1980 1981 1982 
--  12   1    10   1
SELECT HIREDATE FROM EMP;
SELECT COUNT(*) TOTAL,
       SUM(DECODE(TO_CHAR(HIREDATE,'YYYY'),1980,1,0)) "1980년"  ,
       SUM(DECODE(TO_CHAR(HIREDATE,'YYYY'),1981,1,0)) "1981년"  , 
       SUM(DECODE(TO_CHAR(HIREDATE,'YYYY'),1982,1,0)) "1982년" 
FROM EMP;
-- EMP 테이블에서 1000이상의 급여를 가지고 있는 사람들에 대해서만
-- 부서별 평균을 구하고 부서별 평균이 2000이상인 부서번호, 부서별 평균급여 출력

SELECT DEPTNO, ROUND(AVG(SAL))
FROM EMP
WHERE SAL > 1000
GROUP BY DEPTNO
HAVING ROUND(AVG(SAL)) >= 2000;

-- PROFESSOR 테이블
-- 학과별 직급별 교수들의 평균 급여 중에서 평균 급여가 400 이상인거 출력
-- 학과번호 직급 평균급여
SELECT DEPTNO, POSITION, ROUND(AVG(SAL))
FROM PROFESSOR
GROUP BY DEPTNO,POSITION
HAVING ROUND(AVG(SAL)) >= 400;

-- P196
SELECT DEPTNO,JOB, COUNT(*), MAX(SAL), SUM(SAL), MIN(SAL), AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;
-- ROLLUP(A,B) A,B / A 에 대한 거 출력, 전체에서 부분으로
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), MIN(SAL), SUM(SAL), ROUND(AVG(SAL))
FROM EMP
GROUP BY ROLLUP(DEPTNO,JOB)
ORDER BY DEPTNO,JOB;
-- CUBE(A,B) A,B / A / B 에 대한 거 출력, 즉 모든 경우의 수 출력
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), MIN(SAL), SUM(SAL), ROUND(AVG(SAL))
FROM EMP
GROUP BY CUBE(DEPTNO,JOB)
ORDER BY DEPTNO,JOB;

-----
SELECT * FROM EMP;
SELECT * FROM DEPT;
----- 사원번호(EMPNO), 사원이름(ENAME), 직업(JOB), 부서명(DNAME), 위치 필요(LOC)
SELECT *
FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO;
-- P215
-- 같을 때 조인시켜주는 것을 등가조인이라고 표현함
SELECT EMPNO, ENAME, JOB, E.DEPTNO ,DNAME, LOC
FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY DEPTNO;

--- 비등가조인
SELECT * FROM EMP;
SELECT * FROM SALGRADE;

SELECT * FROM EMP ,SALGRADE 
WHERE SAL BETWEEN LOSAL AND HISAL;

-- 자체,셀프(JOIN)
-- 자신의 상사(MGR) 의 이름 출력
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO 상사회원번호, E2.ENAME 상사이름 
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;

-- EMP 테이블에서 , DEPTNO가 30번인 사원들을 조회해서
-- COMM 값이 있을 경우 'Exist' 을
-- COMM 값이 NULL 일 경우 'NULL' 출력

SELECT DEPTNO, EMPNO, ENAME, COMM,
NVL2(COMM,'EXIST','NULL')
FROM EMP
WHERE DEPTNO = 30;

-- 급여가 2500 이하이고 사번이 9999 이하인 사원의 정보를 출력
-- 사원번호(EMPNO),이름(ENAME),급여(SAL),부서번호(DEPTNO),부서명(DNAME),부서지역(LOC)

SELECT EMPNO, ENAME, SAL, E.DEPTNO, DNAME, LOC
FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO AND
SAL <= 2500 AND EMPNO <= 9999
ORDER BY EMPNO DESC;

SELECT * FROM EMP;
SELECT * FROM DEPT;

-- 이름이 'ALLEN'인 사원의 부서명 출력
SELECT EMPNO, ENAME, E.DEPTNO, DNAME
FROM EMP E,DEPT D 
WHERE ENAME = 'ALLEN' AND E.DEPTNO = D.DEPTNO ;

-- 급여가 3000~5000 사이의 직원인 이름과 소속 부서명을 출력
-- 사원이름(ENAME),직업(JOB),월급(SAL),월급등급(GRADE),부서명(DNAME)

SELECT EMPNO,ENAME,JOB,DNAME,SAL,D.DEPTNO,GRADE
FROM EMP E,DEPT D, SALGRADE S
WHERE                                   --SAL BETWEEN 3000 AND 5000 AND 
D.DEPTNO = E.DEPTNO AND 
E.SAL BETWEEN S.LOSAL AND S.HISAL;

-- 직급이 매니저인 사원의 이름과 부서명을 출력하시오
SELECT ENAME, JOB, DNAME, D.DEPTNO
FROM EMP E,DEPT D
WHERE E.DEPTNO = D.DEPTNO AND JOB LIKE 'MANAGER';

-- JOIN ON 뒤에는 조건문이 붙는다
SELECT E.ENAME, D.DNAME
FROM EMP E JOIN DEPT D 
ON E.DEPTNO = D.DEPTNO AND E.JOB = 'MANAGER'; 

-- Q.1 EMP 테이블 활용 부서번호(DEPTNO), 평균급여(AVG_SAL), 최고급여(MAX_SAL),
-- 최저급여(MIN_SAL), 사원수(CNT)출력 단 평균급여를 출력할 때 소수점을 제외하고 각 부서
-- 번호별로 출력하세요

SELECT DEPTNO, TRUNC(AVG(SAL)), MAX(SAL), MIN(SAL), COUNT(*)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO DESC;

-- Q.2 다음과 같은 결과가 나오도록 SQL문을 작성해 보세요.
-- 같은 직책(JOB)에 종사하는 사원이 3명이상인 직책과 인원수를 출력하세요

SELECT JOB, COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(JOB) >= 3;

-- Q.3 다음과 같은 결과가 나오도록 SQL문을 작성하세요
-- 사원들의 입사연도(HIRE_YEAR)를 기준으로 부서별로 몇명이 입사했는지 출력하세요

SELECT TO_CHAR(HIREDATE,'YYYY') AS "HIRE_YEAR"
,DEPTNO
,COUNT(*) AS "CNT"
FROM EMP
GROUP BY DEPTNO,TO_CHAR(HIREDATE,'YYYY');

-- Q.4 추가수당(COMM)을 받는 사원수와 받지 않는 사원수를 출력하세요
SELECT NVL2(COMM,'O','X'),COUNT(*) CNT
FROM EMP
GROUP BY NVL2(COMM,'O','X');

-- Q.5 다음과 같은 결과가 나오도록 SQL 문을 작성해 보세요
-- 각 부서의 입사 연도별 사원 수, 최고급여, 급여 합, 평균급여를 출력하고 각 부서별
-- 소계와 총계를 출력하세요

SELECT DEPTNO, TO_CHAR(HIREDATE,'YYYY') HIRE_YEAR, COUNT(*), CNT
       MAX(SAL) MAX_SAL, SUM(SAL) SUM_SAL, ROUND(AVG(SAL)) AVG_SAL
FROM EMP
GROUP BY ROLLUP(DEPTNO,TO_CHAR(HIREDATE,'YYYY'))
ORDER BY DEPTNO;

----------------------
-- (JOIN) ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력
SELECT ENAME, HIREDATE, E.DEPTNO, DNAME
FROM EMP E,DEPT D
WHERE DNAME = 'ACCOUNTING' AND E.DEPTNO = D.DEPTNO;

-- JOIN ON을 사용
SELECT ENAME, HIREDATE, E.DEPTNO, DNAME
FROM EMP E JOIN DEPT D
ON DNAME = 'ACCOUNTING' AND E.DEPTNO = D.DEPTNO;

-- 2. COMM을 받는 사원 이름과 부서명 출력(0을제외 0보다 많은 금액)
SELECT ENAME,E.DEPTNO,DNAME, COMM
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND COMM > 0;

SELECT ENAME,E.DEPTNO,DNAME
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO AND COMM > 0;

SELECT * FROM DEPT;
-- 3. NEWYORK에 근무하는 사원의 이름과 급여를 출력하라
SELECT ENAME,SAL,LOC
FROM EMP E , DEPT D
WHERE LOC = 'NEW YORK' AND E.DEPTNO = D.DEPTNO;

SELECT ENAME,SAL,LOC
FROM EMP E JOIN DEPT D
ON LOC = 'NEW YORK' AND E.DEPTNO = D.DEPTNO;

SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD')
FROM DUAL;

-- 4. SMITH와 동일한 근무지에서 근무하는 사원의 이름을 출력
SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT ENAME, DNAME, LOC
FROM EMP E, DEPT D
WHERE D.DEPTNO = E.DEPTNO AND E.DEPTNO = (SELECT DEPTNO FROM EMP
WHERE ENAME ='SMITH'); 

SELECT ENAME, DNAME, LOC
FROM EMP E JOIN DEPT D
ON D.DEPTNO = E.DEPTNO AND E.DEPTNO = (SELECT DEPTNO FROM EMP
WHERE ENAME = 'SMITH');

-- 셀프조인
SELECT FRIEND.ENAME AS "SMITH 동료"
FROM EMP E, EMP FRIEND
WHERE E.DEPTNO = FRIEND.DEPTNO
AND E.ENAME = 'SMITH'
AND FRIEND.ENAME <> 'SMITH';

SELECT  F.ENAME AS "SMITH FRIENDS"
FROM EMP E JOIN EMP F
    ON E.DEPTNO = F.DEPTNO
        AND E.ENAME = 'SMITH' AND F.ENAME <> 'SMITH';
        
-- MANAGER가 KING인 사원의 이름과 직급을 출력
SELECT E.ENAME, E.JOB, E.MGR
FROM EMP E, EMP M
    WHERE E.MGR = M.EMPNO 
    AND M.ENAME = 'KING';
    
SELECT ENAME,JOB,MGR
FROM EMP
WHERE MGR = (SELECT EMPNO FROM EMP WHERE ENAME='KING');

--SELF 조인
SELECT E.ENAME, E.JOB, E.MGR
FROM EMP E JOIN EMP M
ON E.MGR = M.EMPNO
AND M.ENAME = 'KING';

-- P229 NULL인것 까지 출력해달라는 의미(+),아우터 조인(NULL을 가짐)
SELECT E1.EMPNO, E1.ENAME, E1.MGR AS "매니저번호"
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+);

SELECT E1.EMPNO, E1.ENAME, E1.MGR AS "매니저번호"
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO;

-- P232 표준 방식
SELECT  EMPNO, ENAME, SAL, MGR, DEPTNO, DNAME, LOC
FROM EMP E NATURAL JOIN DEPT D
WHERE SAL > 2000
ORDER BY DEPTNO,
EMPNO DESC;
--
SELECT EMPNO, ENAME, SAL, MGR, DEPTNO, DNAME, LOC
FROM EMP E JOIN DEPT D USING(DEPTNO)
WHERE SAL > 2000;

--P234(JOIN~ON: 가장 많이 사용하는 방법)
SELECT EMPNO, ENAME, SAL, MGR, E.DEPTNO, DNAME, LOC
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE SAL > 2000 ;

-- 모든 부서 출력
SELECT E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO 
ORDER BY D.DEPTNO;

SELECT  E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E RIGHT OUTER JOIN DEPT D 
         ON E.DEPTNO = D.DEPTNO;

SELECT E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO(+)
ORDER BY D.DEPTNO;

SELECT  E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E LEFT OUTER JOIN DEPT D 
         ON E.DEPTNO = D.DEPTNO;

